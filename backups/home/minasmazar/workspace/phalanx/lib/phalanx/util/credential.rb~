module Phalanx
  module Util

    module Credential
      require 'phalanx/session/account'
      VAR_NAME = 'OGAME_CREDENTIALS'

      def self.get_account_from_s str
        env = str.split[0..2]
        raise ArgumentError.new "Invalid credential string format: #{str}" unless env && env.size == 3
        Phalanx::Session::Account.send(env[0]).merge user: env[1],  pass: env[2]
      end

      def self.get_account_from_env
        if ENV[VAR_NAME]
          get_account_from_s ENV[VAR_NAME]            
        elsif ARGV[0] && ( ucode = ENV["#{VAR_NAME}_#{ARGV[0].upcase}"] )
          ucode = "#{ARGV[0].upcase} #{ucode.split[-2..-1].join ' ' }"
          get_account_from_s ucode
        else
          return nil
          raise ArgumentError.new "No univ-code on command line: #{ARGV[0]}" unless ARGV[0]
          raise ArgumentError.new "No environment variable found: #{VAR_NAME}" unless ENV[VAR_NAME]
        end
      end

      require 'yaml'

      HOME_YAML_FILE = File.expand_path "~/.prybot-acco.yaml"

      ACCO_YAML_TEMPLATE = <<-EOS
---
- !ruby/hash:Phalanx::Session::Account
  :ogamenet: it.ogame.gameforge.com
  :univ: SNNN
  :user: Harkonnen
  :pass: harvesttildeath
- !ruby/hash:Phalanx::Session::Account
  :ogamenet: it.ogame.gameforge.com
  :univ: SNNN
  :user: Atreides
  :pass: powertofremen

EOS

      def self.get_account_from_yaml(univ_id)
        if univ_id.match /(S\d+?)_(\w+)/
          univ, country = $1, $2
        else
          raise ArgumentError.new "Bad format for univ/ogamenet: #{univ_id} found, expected SNNN_XX (NNN is server number, XX is country id i.e. IT/UK/etc..))"
        end
        file = HOME_YAML_FILE 
        unless File.exists? file
          File.write file, ACCO_YAML_TEMPLATE
          raise StandardError.new "Account yaml file not found..template was created in #{HOME_YAML_FILE}"
        end
        binding.pry
        account = YAML.load_file(file).find {|a| a[:univ] == univ && a[:ogamenet].split('.').first.upcase == country.upcase }
        raise ArgumentError.new "No account found for univ #{univ_id}" unless account
        Phalanx::Session::Account.new.merge! account 
      end

    end

  end
end
